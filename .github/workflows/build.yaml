name: Build & Push Docker Image

on:
  push:

jobs:
  build:
    name: Docker build & push image
    runs-on: ubuntu-latest
    steps:
#      - name: Checkout
#        uses: actions/checkout@v4
#      - name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v3
#      - name: Login to Docker Hub
#        uses: docker/login-action@v3
#        with:
#          username: ${{ secrets.DOCKERHUB_USERNAME }}
#          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set ENV to build
        run: |
          tag=$(echo ${{github.ref}} | sed -e 's/refs\/heads\///')
          GIT_BRANCH=$tag
          if [[ ${{github.ref}} == 'refs/tags/'* ]]; then
            tag=$(echo ${{github.ref}} | sed -e 's/refs\/tags\///')
          elif [[ ${{github.ref}} == 'refs/heads/main' ]]; then
            tag=latest
          fi

          echo "GIT_BRANCH=$GIT_BRANCH" >> $GITHUB_ENV
          echo "DOCKER_IMAGE_NAME=${{ secrets.DOCKERHUB_USERNAME }}/${{ github.event.repository.name }}:$tag" >> $GITHUB_ENV
#      - # Add support for more platforms with QEMU (optional)
#        # https://github.com/docker/setup-qemu-action
#        name: Set up QEMU
#        uses: docker/setup-qemu-action@v3
#      - name: Set up Docker Buildx
#        uses: docker/setup-buildx-action@v3
#      - name: Build and push Docker image
#        uses: docker/build-push-action@v5
#        with:
#          platforms: linux/amd64, linux/arm64
#          target: prod
#          push: true
#          tags: ${{env.DOCKER_IMAGE_NAME}}
      - name: executing remote ssh commands using password
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            mkdir -p /app/${{ github.event.repository.name }}
            
            test -d /app/${{ github.event.repository.name }}/${{ env.GIT_BRANCH }} || \
              git clone git@github.com:${{ github.repository }}.git  ./${{ github.event.repository.name }}/${{ env.GIT_BRANCH }} -b ${{ env.GIT_BRANCH }}
            
            cd /app/${{ github.event.repository.name }}/${{ env.GIT_BRANCH }}
            git pull --rebase
            
            castor deploy:branch ${{ env.GIT_BRANCH }}
